    npm init
--> to create more readable Urls
    npm i slugify
--> to install nodemon which automatically restarts whenever we made a change
    npm i nodemon --save-dev
--> to install it globally 
    npm i nodemon --global
--> If this error came "nodemon.ps1 cannot be loaded because running scripts is disabled on this system" do this
Run powershell as administrator and run the below command
    Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
--> to check out dated projects
    npm outdated
--> we can install pakages with specific version numbers
    npm i slugify@1.0.0
--> To update
    npm update slugify
--> To uninstall
    npm uninstall slugify
--> ^ in package.json means it accepts patch and minor releases
--> ~ in package.json means it accepts minor changes only.
--> If we downloaded code from git and it usually does not include nodes_modules folder we can get that through
    npm install
    --------------------------------------------
    Asynchronous Java script
    --------------------------------------------
--> For http requests there are many npm pakages but for now we will  Use
    npm i superagent

    --------------------------------------------
    Natours Api Project
    --------------------------------------------
--> To install express version 4
    npm i express@4
--> To install third party middleware
    npm i morgan (Http request logger)
--> To install dotenv for environmental variables
    npm i dotenv
--> To install and configure Eslint and prettier
    npm i eslint prettier eslint-config-prettier eslint-plugin-prettier eslint-config-airbnb eslint-plugin-node eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react --save-dev
    
    --------------------------------------------
    MongoDb commands
    --------------------------------------------
--> To run server
    C:\Program Files\MongoDB\Server\5.0\bin
    mongod.exe
--> To run MongoDb
    mongo.exe
--> To run mongoDB shell
    mongo
    use natours-test
    show dbs
    show collections
    quit()
--> Create (CRUD)
    db.tours.insertOne({name:"the Forest Hiker",price:297,rating:4.7})
    db.tours.insertMany([{name:"The Sea Explorer", price:497,rating:4.8 },{name:"The Snow Adventurer", price:997,rating:4.9,difficulty:"easy"  }])
--> Read (CRUD)
    db.tours.find()
    db.tours.find({name:"the Forest Hiker"})
--> price is less than or equal 500
    db.tours.find({price:{$lte:500}})
--> price is less than 500
    db.tours.find({price:{$lt:500}})
    db.tours.find({price:{$lt:500},rating:{$gte:4.8}})
    db.tours.find({$or: [ {price:{$lte:500}},{rating:{$gte:4.8}}  ]})
--> Update (CRUD)
    db.tours.updateOne({name:"The Snow Adventurer"},{$set:{price:598}})
    db.tours.updateMany({price:{$gt:500},rating:{$gte:4.8}},{$set:{premium:true}})
--> Delete (CRUD)
    db.tours.deleteMany({rating:{lte:4.7}})
    we can delete all documents but don't do this.
    db.tours.deleteMany({})
    ------------------------------------------------------------------------------
--> To install driver for mongoDB
    npm i mongoose@5
--> To install validator for custom validation
    npm i validator
--> To install node debugger
    npm i ndb --global
--> To explore whats inside the error
    console.log(`Error======================${JSON.stringify(error)}`);
--> To remove already commited/staged file from GIT 
    git rm --cached config.env
--> Add the following line to file .gitignore:
    /Hello.class
--> If you want to exclude all class files from Git, add the following line to .gitignore:
    *.class
--> To install bcryptjs npm package (used for encryption)
    npm i bcryptjs
--> To install jwt 
    npm i jsonwebtoken
--> To install nodemailer
    npm i nodemailer


    
